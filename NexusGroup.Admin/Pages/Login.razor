@page "/login"
@layout LoginLayout
@inject Data.Token.TokenHelper _token
@inject NavigationManager NavigationManager
@inject Data.ApiServices.Auth.IAuthApiService _service
@inject ISnackbar _snackbar
@inject IDialogService DialogService

<MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex justify-center align-center vh-100">
    <MudCard>
        <MudCardContent>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-3">Iniciar Sesión</MudText>

            <MudForm @ref="form" Validated="true">
                <MudTextField Label="Correo Electrónico"
                              Variant="Variant.Filled"
                              FullWidth
                              Margin="Margin.Dense"
                              @bind-Value="loginModel.Username"
                              Required 
                              AdornmentIcon="@Icons.Material.Outlined.AccountBox"
                              Adornment="Adornment.Start"/>

                <MudTextField Label="Contraseña"
                              Variant="Variant.Filled"
                              FullWidth
                              Margin="Margin.Dense"
                              InputType="InputType.Password"
                              @bind-Value="loginModel.Password"
                              Required />

                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           FullWidth
                           Class="mt-3"
                           Disabled="@isLoading"
                           OnClick="HandleLogin">
                    <div style="display: flex; align-items: center; justify-content: center;">
                        @if (isLoading)
                        {
                            <MudProgressCircular Color="Color.Default" Size="Size.Small" Indeterminate="true" />
                            <span>Iniciando...</span>
                        }
                        else
                        {
                            <span>Entrar</span>
                        }
                    </div>
                </MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private AuthRequest.LoginRequest loginModel = new AuthRequest.LoginRequest();
    private MudForm form;
    private bool isLoading = false;
    private bool validateForm = true;

    private async Task HandleLogin()
    {
        bool isUserValid = string.IsNullOrEmpty(loginModel.Username);
        if (!isUserValid)
        {
            isLoading = true;

            try
            {
                var response = await _service.Login(loginModel);

                if (response.Success && response != null)
                {
                    string token = response.Data;
                    await _token.SaveToken(token);
                    var tokenpart = await _token.ExtractToken();
                    await ShowDialog(response.Message, Severity.Success, response.Success, tokenpart);
                }
                else
                {
                    await ShowDialog(response.Message, Severity.Error, response.Success, null);
                }
            }
            catch (Exception ex)
            {
                await ShowDialog("Error inesperado: " + ex.Message, Severity.Error, false, null);
            }
            finally
            {
                isLoading = false;
            }
        }
        else
        {
            _snackbar.Add("Por favor, completa todos los campos requeridos.", Severity.Warning);
        }
    }

    private async Task ShowDialog(string message, Severity severity, bool success, string tokenpart )
    {
        var parameters = new DialogParameters<DialogLogin>
        {
            { x => x.Message, message },
            { x => x.Severity, severity },
            { x => x.Success, success }
        };

        var options = new DialogOptions
            {
                CloseButton = true,
                MaxWidth = MaxWidth.Small,
                Position = DialogPosition.Center,
                FullWidth = true
            };
        var dialog = DialogService.Show<DialogLogin>("Iniciar Sesión", parameters, options);
        var result = await dialog.Result;
        if(result.Data is bool && success)
        {
            NavigationManager.NavigateTo($"{tokenpart}/home");
        }
    }
}
